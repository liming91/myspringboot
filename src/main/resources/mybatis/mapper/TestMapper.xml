<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ming.mapper.TestMapper">

    <insert id="addTest" parameterType="com.ming.bean.Test">
        <foreach collection="list" item="te" separator=";">
            insert into test(id,name)
            values(#{te.id},#{te.name})
        </foreach>

    </insert>
    <select id="getDateByTime" resultType="com.ming.bean.Test">
        SELECT
        DATE_FORMAT( time,'${queryDate}'  ) AS groupTime,
        DATE_FORMAT( time, '${resDate}' ) AS dateTime,
        round(money , 2 ) AS dataValue
        FROM
        test
        WHERE
        DATE_FORMAT( time, '${queryDate}' )<![CDATA[ <= ]]>   #{localDate}
        GROUP BY
        dataValue,
        DATE_FORMAT( time, '${queryDate}'  ),
        DATE_FORMAT( time, '${resDate}' )
        ORDER BY
        DATE_FORMAT( time, '${queryDate}'  ),
        DATE_FORMAT( time, '${resDate}' );
    </select>

    <select id="getList" resultType="com.ming.bean.Test">
        SELECT
        SUM( t.money ) AS dataValue,
        DATE_FORMAT( t.time, '${resDate}' ) AS dateTime,
        DATE_FORMAT( t.time, '${queryDate}' ) AS groupTime
        FROM
        test t
        WHERE
        DATE_FORMAT( t.time, '${queryDate}' ) = '2023-04-20'
        GROUP BY
        DATE_FORMAT( t.time, '${resDate}' ),
        DATE_FORMAT( t.time,'${queryDate}' )
        ORDER BY
        DATE_FORMAT( t.time, '${resDate}' ),
        DATE_FORMAT( t.time, '${queryDate}')
        ASC
    </select>
    <select id="dayMonthYearSql">
        <!--SELECT
            TO_CHAR( M.CREATE_TIME, 'HH24:mi' ) AS "dateTime",
            M.TEMPERATURE AS "temperature",
            M.HUMIDITY "humidity",
            M.CO2 "co2",
            M.PM "pm",
            CASE

                WHEN M."RANGE" = 1 THEN
                    'outdoor'
                WHEN M."RANGE" = 2 THEN
                    'indoor'
                END RANGE
        FROM
            YB_HQ_MILIEU_MONITOR M
        WHERE
            M.EQU_CODE = 'ENV_F04_052'
          AND TO_CHAR( M.CREATE_TIME, 'yyyy-MM-dd' ) = '2024-06-10'
        GROUP BY
            TO_CHAR( M.CREATE_TIME, 'HH24:mi' ),
            M."RANGE",
            M.TEMPERATURE,
            M.HUMIDITY,
            M.CO2,
            M.PM
        ORDER BY
            TO_CHAR( M.CREATE_TIME, 'HH24:mi' );


        SELECT
            TO_CHAR( M.CREATE_TIME, 'yyyy-MM' ) AS "dateTime",
            NVL( round( avg( M.temperature ), 2 ), '0' ) AS "temperature",
            NVL( round( avg( M.HUMIDITY ), 2 ), '0' ) AS "humidity",
            NVL( round( avg( M.CO2 ), 2 ), '0' ) AS "co2",
            NVL( round( avg( M.PM ), 2 ), '0' ) AS "pm",
            CASE

                WHEN M."RANGE" = 1 THEN
                    'outdoor'
                WHEN M."RANGE" = 2 THEN
                    'indoor'
                END RANGE
        FROM
            YB_HQ_MILIEU_MONITOR M
        WHERE
            M.EQU_CODE = 'ENV_F04_052'
          AND TO_CHAR( M.CREATE_TIME, 'yyyy' ) = '2024'
        GROUP BY
            TO_CHAR( M.CREATE_TIME, 'yyyy-MM' ),
            M."RANGE"
        ORDER BY
            TO_CHAR( M.CREATE_TIME, 'yyyy-MM' );





        SELECT
            TO_CHAR( M.CREATE_TIME, 'MM-dd' ) AS "dateTime",
            NVL( round( avg( M.temperature ), 2 ), '0' ) AS "temperature",
            NVL( round( avg( M.HUMIDITY ), 2 ), '0' ) AS "humidity",
            NVL( round( avg( M.CO2 ), 2 ), '0' ) AS "co2",
            NVL( round( avg( M.PM ), 2 ), '0' ) AS "pm",
            CASE

                WHEN M."RANGE" = 1 THEN
                    'outdoor'
                WHEN M."RANGE" = 2 THEN
                    'indoor'
                END RANGE
        FROM
            YB_HQ_MILIEU_MONITOR M
        WHERE
            M.EQU_CODE = 'ENV_F04_052'
          AND TO_CHAR( M.CREATE_TIME, 'yyyy-MM' ) = '2024-06'
        GROUP BY
            TO_CHAR( M.CREATE_TIME, 'MM-dd' ),
            M."RANGE"
        ORDER BY
            TO_CHAR( M.CREATE_TIME, 'MM-dd' );-->
    </select>

    <select id="getFenTime" resultType="com.ming.bean.Test">
        SELECT
        SUM( t.money ) AS dataValue,
        DATE_FORMAT( t.time, '%H:%i' ) AS dateTime,
        DATE_FORMAT( t.time, '%Y-%m-%d' ) AS groupTime
        FROM
        test t
        WHERE
        DATE_FORMAT( t.time, '%Y-%m-%d' ) = '2023-04-20'
        GROUP BY
        DATE_FORMAT( t.time, '%H:%i' ),
        DATE_FORMAT( t.time, '%Y-%m-%d' )
        ORDER BY
        DATE_FORMAT( t.time, '%H:%i' ),
        DATE_FORMAT( t.time, '%Y-%m-%d' )
    </select>

    <select id="select" resultType="com.ming.bean.Test">
        select  * FROM test
    </select>

    <select id="findSevenDate" resultType="com.ming.entities.VO.DataTrendVO">
        SELECT
        ROUND(AVG(money),2) as  dataValue,
        DATE_FORMAT( t.time, '%m-%d' ) AS dateTime
        FROM
        test t
        WHERE
        DATE_SUB( CURDATE(), INTERVAL 7 DAY )  <![CDATA[ <= ]]>  date( t.time )
        GROUP BY
        DATE_FORMAT( t.time, '%m-%d' )
        ORDER BY
        DATE_FORMAT( t.time, '%m-%d' )
    </select>


</mapper>